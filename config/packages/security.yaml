security:
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: auto
      cost: 15

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api_login:
        pattern: ^/api/login
        stateless: true
        json_login:
            check_path: /api/login
            username_path: email
            password_path: password
            success_handler: lexik_jwt_authentication.handler.authentication_success
            failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
        pattern: ^/api
        stateless: true
        provider: app_user_provider
        jwt: ~

    main:
      pattern: ^/
      provider: app_user_provider
      form_login:
        login_path: app_login
        check_path: /login
        username_parameter: _username
        password_parameter: _password
        default_target_path: /home
      logout:
        path: /logout
        target: app_home

  access_control:
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/logout, roles: PUBLIC_ACCESS }
    - { path: ^/users/new, roles: PUBLIC_ACCESS }
    - { path: ^/users, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/critiques/, roles: PUBLIC_ACCESS }
    - { path: ^/critiques/new, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/critiques/\d+/edit, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/critiques/\d+/delete, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/admin/genre/, roles: ROLE_ADMIN }

    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/genres$, roles: ROLE_ADMIN, methods: [GET] }
    - { path: ^/api/genres$, roles: ROLE_ADMIN, methods: [POST] }
    - { path: ^/api/genres/\d+$, roles: ROLE_ADMIN, methods: [GET] }
    - { path: ^/api/genres/\d+$, roles: ROLE_ADMIN, methods: [PUT, DELETE] }

    - { path: ^/commentaire/, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/commentaire/new/\d+/, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/commentaire/\d+/edit, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/commentaire/\d+/delete, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/admin/, roles: ROLE_ADMIN }
    - { path: ^/theories/, roles: PUBLIC_ACCESS }
    - { path: ^/theories/new, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/theories/\d+/, roles: PUBLIC_ACCESS }
    - { path: ^/theories/\d+/edit, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/theories/\d+/delete, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/likes, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/commentaire/\d+/report, roles: IS_AUTHENTICATED_FULLY }